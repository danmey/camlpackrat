NUMBER:int  <- [0-9]+    { int_of_string $0 } ; 
ID:string   <- [a-z]     { [] } ;
ASSIGN:string <- "="     { [] } ;  
PLUS:string    <- "+"    { 0 } ;   
MINUS:string   <- "-"    { 0 };
TIMES:string   <- "*"   { 0 };
DIVIDE:string  <- "/"   { 0 };
OPEN2:string   <- "("  { 0 };
CLOSE:string   <- ")"  { 0 };

SPACES:string  <- [ ]*  { [] };
EOL:string     <- "\n" / "\r\n" / "\r" / ";"  { [] };

Value:int   <- NUMBER / (OPEN2 a_main CLOSE) { $0 } ;

Product:int <- 	     Value (((PLUS Value) { fun x -> x+$1 })
	    	    / (Value ((MINUS Value)  { fun x -> x-$1 })))* ;

#sum:int list     <- (product
#	      	  / ((PLUS  product) / (MINUS product))*) { [] } ;

#expr:int list	        <- (ID ASSIGN sum / sum) { [] };           


a_main:unit     <- product     { Printf.printf "%d" $0 } ;


