NUMBER:int  <- ((f:([0-9]) n:([0-9]*)) { int_of_string (String.concat "" (f::n)) }) ;
ID:string   <- [a-z];  
ASSIGN:string <- "=";  
PLUS:string    <- "+"; 
MINUS:string   <- "-"; 
TIMES:string   <- "*"; 
DIVIDE:string  <- "/"; 
LB:string   <- "("; 
RB:string   <- ")"; 

SPACES:string  <- [ ]*  ;
EOL:string     <- "\n" / "\r\n" / "\r" / ";" ;
BLANKS:string <- [     ]* ;

Expr:unit    <- s:Sum;

Sum:unit     <-  l:Product fncs:(( PLUS  r:Product { fun x -> x + r} / MINUS r:Product { fun x -> x-r} )*) 
	     	 { List.fold_left (fun acc f -> f acc) l fncs } ; 

Product:int <- l:Value fncs:(( (TIMES r:Value) { fun x -> x * r} / ((DIVIDE r:Value) { fun x -> x/r}) )*) 
	     	 { List.fold_left (fun acc f -> f acc) l fncs  } ; 
Value:unit   <- i:NUMBER / (LB e:expr RB { e }) ;
a_main:unit <- i:expr { Printf.printf "%d\n" i };

